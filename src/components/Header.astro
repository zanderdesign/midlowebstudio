---
import navData from "@data/navData.json";
import { Icon } from "astro-icon/components";
import DarkModeToggle from "@components/DarkModeToggle.astro";
import logo from "@assets/images/logo.png";
import { Image } from "astro:assets";
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation">
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <Image src={logo} alt="logo" />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button
        class="cs-toggle"
        id="mobile-menu-toggle"
        aria-expanded="false"
        aria-controls="cs-expanded-ul"
        aria-label="Toggle mobile menu."
      >
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <!-- This also allows for easy substitution of CodeStitch navigations. Just replace the .cs-ul-wrapper in the new navigation with this one -->
      <div class="cs-ul-wrapper">
        <ul id="cs-expanded-ul" class="cs-ul">
          {
            navData.map((entry) => (
              <li
                class:list={[
                  "cs-li",
                  { "cs-dropdown": entry.children?.length > 0 },
                ]}
              >
                {entry.children?.length > 0 ? (
                  // If entry has children in navData.json, create a button and a dropdown icon
                  <button
                    aria-expanded="false"
                    aria-controls={`submenu-${entry.key}`}
                    class:list={[
                      "cs-li-link cs-dropdown-button",
                      { "cs-active": Astro.url.pathname.includes(entry.url) },
                    ]}
                  >
                    {entry.key}
                    <Icon name="mdi--caret" class="cs-drop-icon" />
                  </button>
                ) : (
                  // If entry does not have children in navData.json, create an anchor
                  <a
                    href={entry.url}
                    class:list={[
                      "cs-li-link",
                      { "cs-active": Astro.url.pathname === entry.url },
                    ]}
                    aria-current={
                      Astro.url.pathname === entry.url ? "page" : undefined
                    }
                  >
                    {entry.key}
                  </a>
                )}

                {entry.children?.length > 0 && (
                  // If entry has children in navData.json, create a drop down menu
                  <ul id={`submenu-${entry.key}`} class="cs-drop-ul">
                    {entry.children.map((child) => (
                      <li class="cs-drop-li">
                        <a
                          href={child.url}
                          class="cs-li-link cs-drop-link"
                          aria-current={
                            Astro.url.pathname === child.url
                              ? "page"
                              : undefined
                          }
                        >
                          {child.key}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            ))
          }
        </ul>
      </div>
      <a href="/contact" class="cs-button-solid cs-nav-button">Get Started</a>
    </nav>
    <DarkModeToggle />
  </div>

  <style lang="less">
    /*-- -------------------------- -->
  <---     Mobile Navigation      -->
  <--- -------------------------- -*/

    /* Mobile - 1023px */
    @media only screen and (max-width: 63.9375rem) {
      body {
        &.cs-open {
          overflow: hidden;
        }

        &.scroll {
          #cs-navigation {
            width: 100%;
            max-width: 100%;
            top: 0;

            &:before {
              border-radius: 0;
            }

            .cs-ul-wrapper {
              top: 100%;
            }
          }
        }
      }

      #cs-navigation {
        width: 94%;
        max-width: (1280/16rem);
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        /* 12px - 24px */
        padding: clamp(0.75rem, 2vw, 1.5rem);
        /* 12px - 24px */
        border-radius: clamp(0.75rem, 2vw, 1.5rem);
        position: fixed;
        top: (32/16rem);
        display: flex;
        align-items: center;
        left: 50%;
        z-index: 10000;
        transform: translateX(-50%);
        transition:
          top 0.3s,
          border-radius 0.3s,
          width 0.3s,
          max-width 0.3s;

        &:before {
          /* background color */
          content: "";
          width: 100%;
          height: 100%;
          background: #fff;
          box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
          opacity: 1;
          /* 12px - 24px */
          border-radius: clamp(0.75rem, 2vw, 1.5rem);
          display: block;
          position: absolute;
          top: 0;
          left: 50%;
          transform: translateX(-50%);
          transition:
            transform 0.2s,
            border-radius 0.3s ease-in-out;
        }

        &.cs-active {
          &:before {
            transform: translateX(-50%) scale(1.03);
          }

          .cs-toggle {
            transform: rotate(180deg);
          }

          .cs-ul-wrapper {
            transform: scaleY(1);
            transition-delay: 0.15s;
          }

          .cs-li {
            opacity: 1;
            transform: translateY(0);
          }
        }

        .cs-container {
          width: 100%;
          display: flex;
          justify-content: flex-end;
          align-items: center;
          // padding: 0 1.5rem;
          gap: (24/16rem);
        }
        .cs-button-solid {
          display: none;
        }

        .cs-logo {
          width: auto;
          max-width: (180/16rem);
          height: 3.5rem;
          margin: 0 auto 0 0;
          /* prevents padding from affecting height and width */
          box-sizing: border-box;
          padding: 0;
          display: flex;
          justify-content: flex-start;
          align-items: center;
          z-index: 10;

          img {
            width: 100%;
            height: 100%;
            /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
            object-fit: contain;
          }
        }

        .cs-toggle {
          width: (56/16rem);
          height: (56/16rem);
          margin: 0 0 0 auto;
          background-color: #1a1a1a;
          border: none;
          border-radius: (4/16rem);
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;
          z-index: 10;
          transition: transform 0.6s;
        }

        .cs-nav {
          /* sends it to the right in the 3rd position */
          order: 3;
        }

        .cs-contact-group {
          display: none;
          position: relative;
          z-index: 10;
        }

        .cs-phone {
          font-size: (16/16rem);
          line-height: 1.5em;
          text-decoration: none;
          margin: 0;
          color: var(--headerColor);
          display: flex;
          justify-content: flex-start;
          align-items: center;
          gap: (8/16rem);
          transition:
            opacity 0.3s,
            color 0.3s;
        }

        .cs-phone-icon {
          width: (24/16rem);
          height: auto;
          display: block;
        }

        .cs-social {
          display: none;
        }

        .cs-active {
          .cs-line1 {
            top: 50%;
            transform: translate(-50%, -50%) rotate(225deg);
          }

          .cs-line2 {
            top: 50%;
            transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
            transform-origin: center;
          }

          .cs-line3 {
            opacity: 0;
            bottom: 100%;
          }
        }

        .cs-box {
          /* 24px - 28px */
          width: clamp(1.5rem, 2vw, 1.75rem);
          height: (16/16rem);
          position: relative;
        }

        .cs-line {
          width: 100%;
          height: 2px;
          background-color: #fafbfc;
          border-radius: 2px;
          position: absolute;
          left: 50%;
          transform: translateX(-50%);
        }

        .cs-line1 {
          top: 0;
          transition:
            transform 0.5s,
            top 0.3s,
            left 0.3s;
          animation-duration: 0.7s;
          animation-timing-function: ease;
          animation-direction: normal;
          animation-fill-mode: forwards;
          transform-origin: center;
        }

        .cs-line2 {
          top: 50%;
          transform: translateX(-50%) translateY(-50%);
          transition:
            top 0.3s,
            left 0.3s,
            transform 0.5s;
          animation-duration: 0.7s;
          animation-timing-function: ease;
          animation-direction: normal;
          animation-fill-mode: forwards;
        }

        .cs-line3 {
          bottom: 0;
          transition:
            bottom 0.3s,
            opacity 0.3s;
        }

        .cs-ul-wrapper {
          width: 100%;
          height: auto;
          padding-bottom: (48/20em);
          background-color: #fff;
          border-radius: 0 0 (24/16rem) (24/16rem);
          position: absolute;
          top: 85%;
          left: 0;
          z-index: -1;
          overflow: hidden;
          transform: scaleY(0);
          transition: transform 0.4s;
          transform-origin: top;
        }

        .cs-ul {
          width: 100%;
          height: auto;
          max-height: 65vh;
          margin: 0;
          padding: (64/16rem) 0 0 0;
          display: flex;
          flex-direction: column;
          justify-content: flex-start;
          align-items: center;
          gap: (20/16rem);
          overflow: auto;
        }

        .cs-li {
          text-align: center;
          list-style: none;
          width: 100%;
          margin-right: 0;
          opacity: 0;
          /* transition from these values */
          transform: translateY(-70/16rem);
          transition:
            transform 0.6s,
            opacity 0.9s;

          &:nth-of-type(1) {
            transition-delay: 0.05s;
          }
          &:nth-of-type(2) {
            transition-delay: 0.1s;
          }
          &:nth-of-type(3) {
            transition-delay: 0.15s;
          }
          &:nth-of-type(4) {
            transition-delay: 0.2s;
          }
          &:nth-of-type(5) {
            transition-delay: 0.25s;
          }
          &:nth-of-type(6) {
            transition-delay: 0.3s;
          }
          &:nth-of-type(7) {
            transition-delay: 0.35s;
          }
          &:nth-of-type(8) {
            transition-delay: 0.4s;
          }
          &:nth-of-type(9) {
            transition-delay: 0.45s;
          }
          &:nth-of-type(10) {
            transition-delay: 0.5s;
          }
          &:nth-of-type(11) {
            transition-delay: 0.55s;
          }
          &:nth-of-type(12) {
            transition-delay: 0.6s;
          }
          &:nth-of-type(13) {
            transition-delay: 0.65s;
          }
        }

        .cs-li-link {
          /* 16px - 24px */
          font-size: clamp(1rem, 2.5vw, 1.5rem);
          line-height: 1.2em;
          text-decoration: none;
          margin: 0;
          color: var(--headerColor);
          display: inline-block;
          position: relative;

          &.cs-active {
            color: var(--primary);
          }

          &:hover {
            color: var(--primary);
          }
        }
      }
    }

    /* Tablet - 768px */
    @media only screen and (min-width: 48rem) {
      #cs-navigation {
        .cs-contact-group {
          display: block;
        }
        .cs-button-solid {
          display: none;
        }
      }
    }

    /* Dark Mode */
    @media only screen and (max-width: 63.9375rem) {
      body.dark-mode {
        #cs-navigation {
          &:before {
            background-color: var(--dark);
          }

          // .cs-logo {
          //   /* makes it white */
          //   filter: grayscale(1) brightness(1000%);
          // }

          .cs-toggle {
            background-color: var(--secondary);
          }

          .cs-phone {
            color: var(--bodyTextColorWhite);
          }

          .cs-phone-icon {
            /* turns it white */
            filter: grayscale(1) brightness(1000%);
          }

          .cs-line {
            background-color: #fff;
          }

          .cs-ul-wrapper {
            background-color: var(--medium);
          }

          .cs-li-link {
            color: var(--bodyTextColorWhite);
          }
        }
      }
    }

    /*-- -------------------------- -->
  <---     Navigation Dropdown    -->
  <--- -------------------------- -*/

    /* Mobile - 1023px */
    @media only screen and (max-width: 63.9375rem) {
      #cs-navigation {
        .cs-li {
          text-align: center;
          width: 100%;
          display: block;
        }

        .cs-dropdown {
          color: var(--bodyTextColorWhite);
          position: relative;
          &.cs-active {
            .cs-drop-ul {
              height: auto;
              margin: (12/16rem) 0 0 0;
              padding: (12/16rem) 0;
              opacity: 1;
              visibility: visible;
            }

            .cs-drop-link {
              opacity: 1;
            }

            .cs-drop-icon {
              transform: rotate(0);
            }
          }

          .cs-li-link {
            position: relative;
            transition: opacity 0.3s;
          }
        }

        .cs-drop-icon {
          width: (15/16rem);
          height: auto;
          display: inline-block;
          color: inherit;
          transform: rotate(180deg);
          transition: 0.3s;
        }

        .cs-drop-ul {
          width: 100%;
          height: 0;
          margin: 0;
          padding: 0;
          background-color: var(--primary);
          opacity: 0;
          display: flex;
          visibility: hidden;
          flex-direction: column;
          justify-content: flex-start;
          align-items: center;
          gap: (12/16rem);
          overflow: hidden;
          transition:
            padding 0.3s,
            margin 0.3s,
            height 0.3s,
            opacity 0.3s,
            visibility 0.3s;
        }

        .cs-drop-li {
          list-style: none;
        }

        .cs-li-link {
          &.cs-drop-link {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 2vw, 1.25rem);
            color: #fff;
          }
        }

        .cs-dropdown-button {
          background-color: transparent;
          border: none;
          appearance: none;
        }
      }
    }

    /* Desktop - 1024px */
    @media only screen and (min-width: 64rem) {
      #cs-navigation {
        .cs-dropdown {
          position: relative;
          &:hover {
            cursor: pointer;
            .cs-drop-ul {
              opacity: 1;
              visibility: visible;
              transform: scaleY(1);
            }

            .cs-drop-li {
              opacity: 1;
              transform: translateY(0);
            }
          }
        }

        .cs-dropdown:has(.cs-drop-icon) {
          display: flex;
          align-items: center;
          &:hover {
            .cs-drop-icon {
              transform: rotate(0);
            }
          }
        }

        .cs-drop-icon {
          width: (15/16rem);
          height: auto;
          display: inline-block;
          color: inherit;
          transform: rotate(180deg);
          transition: 0.3s;
        }

        .cs-drop-ul {
          min-width: (200/16rem);
          margin: 0;
          padding: 0;
          background-color: #fff;
          box-shadow: inset rgba(149, 157, 165, 0.1) 0px 8px 10px;
          opacity: 0;
          border-bottom: 5px solid var(--primary);
          border-radius: 0 0 (24/16rem) (24/16rem);
          visibility: hidden;
          /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
          // columns: 2;
          position: absolute;
          top: 100%;
          z-index: -100;
          overflow: hidden;
          transform: scaleY(0);
          transition:
            transform 0.3s,
            visibility 0.3s,
            opacity 0.3s;
          transform-origin: top;
        }

        .cs-drop-li {
          font-size: (16/16rem);
          text-decoration: none;
          list-style: none;
          width: 100%;
          height: auto;
          opacity: 0;
          display: block;
          transform: translateY(-0.625rem);
          transition:
            opacity 0.6s,
            transform 0.6s;

          &:nth-of-type(1) {
            transition-delay: 0.05s;
          }
          &:nth-of-type(2) {
            transition-delay: 0.1s;
          }
          &:nth-of-type(3) {
            transition-delay: 0.15s;
          }
          &:nth-of-type(4) {
            transition-delay: 0.2s;
          }
          &:nth-of-type(5) {
            transition-delay: 0.25s;
          }
          &:nth-of-type(6) {
            transition-delay: 0.3s;
          }
          &:nth-of-type(7) {
            transition-delay: 0.35s;
          }
          &:nth-of-type(8) {
            transition-delay: 0.4s;
          }
          &:nth-of-type(9) {
            transition-delay: 0.45s;
          }
        }

        .cs-li-link {
          &.cs-drop-link {
            font-size: (16/16rem);
            line-height: 1.5em;
            text-transform: capitalize;
            text-decoration: none;
            white-space: nowrap;
            width: 100%;
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            padding: (12/16rem);
            color: var(--headerColor);
            display: block;
            transition:
              color 0.3s,
              background-color 0.3s;

            &:hover {
              background-color: #f7f7f7;
            }

            &:focus-within {
              outline: 2px solid currentColor;
              outline-offset: -2px;
            }

            &:before {
              display: none;
            }
          }
        }

        .cs-dropdown-button {
          background-color: transparent;
          border: none;
          appearance: none;
        }
      }
    }
    @media only screen and (min-width: 1200px) {
      #cs-navigation .cs-button-solid {
        z-index: 1;
        position: relative;
        right: -1.25rem;
        display: block;
        line-height: 3rem;
      }
    }
    /* Dark Mode - Desktop */
    @media only screen and (min-width: 64rem) {
      body.dark-mode {
        #cs-navigation {
          .cs-drop-ul {
            background-color: var(--dark);
          }

          .cs-li-link.cs-drop-link {
            &:hover {
              color: var(--bodyTextColorWhite);
            }
          }
        }
      }
    }

    /*-- -------------------------- -->
  <---     Desktop Navigation     -->
  <--- -------------------------- -*/

    /* Small Desktop - 1024px */
    @media only screen and (min-width: 64rem) {
      body.scroll {
        #cs-navigation {
          width: 100%;
          max-width: 100%;
          border-radius: 0;
          top: 0;
        }
      }

      #cs-navigation {
        width: 94%;
        max-width: (1440/16rem);
        height: (96/16rem);
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        /* 12px - 24px */
        padding: clamp(0.75rem, 2vw, 1.5rem) 0;
        background-color: #fff;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        /* 12px - 24px */
        border-radius: clamp(0.75rem, 2vw, 1.5rem);
        display: flex;
        align-items: center;
        position: fixed;
        top: (32/16rem);
        left: 50%;
        z-index: 10000;
        transform: translateX(-50%);
        transition:
          top 0.3s,
          border-radius 0.3s,
          width 0.3s,
          max-width 0.3s;

        .cs-container {
          display: flex;
          height: 0;
          justify-content: space-between;
          align-items: center;
          margin: auto;
          max-width: 90rem;
          width: 100%;
          box-sizing: border-box;
          padding: 0 1.5rem;
          gap: 1.5rem;
        }

        .cs-toggle {
          display: none;
        }

        .cs-logo {
          width: 18.4%;
          max-width: (350/16rem);
          height: (70/16rem);
          /* margin-right auto pushes everything away from it to the right */
          margin: 0 auto 0 0;
          padding: 0;
          display: flex;
          justify-content: flex-start;
          align-items: center;
          z-index: 100;

          img {
            width: auto;
            height: 100%;
            /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
            object-fit: contain;
          }
        }

        .cs-contact-group {
          display: flex;
          justify-content: center;
          align-items: center;
          gap: (24/16rem);
        }

        .cs-phone {
          font-size: (16/16rem);
          line-height: 1.5em;
          text-decoration: none;
          margin: 0;
          color: var(--headerColor);
          display: flex;
          justify-content: flex-start;
          align-items: center;
          gap: (8/16rem);
          transition:
            opacity 0.3s,
            color 0.3s;
        }

        .cs-phone-icon {
          width: (24/16rem);
          height: auto;
          display: block;
        }

        .cs-social {
          height: (32/16rem);
          opacity: 1;
          display: none;
          visibility: visible;
          justify-content: center;
          align-items: center;
          gap: (8/16rem);
          transition:
            opacity 0.3s,
            visibility 0.3s,
            height 0.3s;
        }

        .cs-social-link {
          text-decoration: none;
          width: (32/16rem);
          height: (32/16rem);
          background-color: #f7f7f7;
          border-radius: 50%;
          display: flex;
          justify-content: center;
          align-items: center;
          transition: background-color 0.3s;

          &:hover {
            background-color: var(--primary);

            .cs-social-icon {
              opacity: 1;
              filter: grayscale(1) brightness(10000%);
            }
          }
        }

        .cs-social-icon {
          width: (12/16rem);
          height: auto;
          opacity: 0.6;
          display: block;
          transition: opacity 0.3s;
        }

        .cs-ul-wrapper {
          height: 100%;
          display: flex;
          align-items: center;
          /* absolutely positioned to be dead center */
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }

        .cs-ul {
          width: 100%;
          height: 100%;
          margin: 0;
          padding: 0;
          display: flex;
          justify-content: flex-start;
          align-items: center;
          /* 20px - 36px */
          gap: clamp(1.25rem, 2.6vw, 2.25rem);
        }

        .cs-li {
          list-style: none;
          height: 100%;
          padding: 0;
          display: flex;
          align-items: center;
          /* prevent flexbox from squishing it */
          flex: none;
        }

        .cs-li-link {
          position: relative;
          display: block;
          margin: 0;
          text-decoration: none;
          text-transform: uppercase;
          font-family: var(--headerFont);
          font-size: clamp(0.9rem, 1vw, 1rem);
          line-height: 1.5em;
          font-weight: 600;
          color: var(--headerColor);
          transition: color 0.3s;

          &:hover {
            color: var(--primary);
          }

          &.cs-active {
            color: var(--primary);
          }
        }
      }
    }

    /* Large Desktop - 1300px */
    @media only screen and (min-width: 81.25rem) {
      #cs-navigation {
        .cs-social {
          display: flex;
        }
      }
    }

    /* Dark Mode */
    @media only screen and (min-width: 64rem) {
      body.dark-mode {
        #cs-navigation {
          background-color: var(--dark);

          // .cs-logo {
          //   /* turns it white */
          //   filter: grayscale(1) brightness(1000%);
          // }

          .cs-li-link,
          .cs-phone {
            color: var(--bodyTextColorWhite);
          }

          .cs-phone-icon {
            filter: grayscale(1) brightness(10005);
          }

          .cs-li-link {
            &.cs-active {
              color: var(--secondary);
            }
            &:hover {
              color: var(--secondary);
            }
          }
        }
      }
    }
  </style>

  <script is:inline>
    // add classes for mobile navigation toggling
    var CSbody = document.querySelector("body");
    const CSnavbarMenu = document.querySelector("#cs-navigation");

    // checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not
    function ariaExpanded() {
      const csUL = document.querySelector("#cs-expanded");
      const csExpanded = csUL.getAttribute("aria-expanded");

      if (csExpanded === "false") {
        csUL.setAttribute("aria-expanded", "true");
      } else {
        csUL.setAttribute("aria-expanded", "false");
      }
    }

    // This script adds a class to the body after scrolling 100px
    // and we used these body.scroll styles to create some on scroll
    // animations with the navbar

    document.addEventListener("scroll", (e) => {
      const scroll = document.documentElement.scrollTop;
      if (scroll >= 100) {
        document.querySelector("body").classList.add("scroll");
      } else {
        document.querySelector("body").classList.remove("scroll");
      }
    });

    // mobile nav toggle code
    const dropDowns = Array.from(
      document.querySelectorAll("#cs-navigation .cs-dropdown"),
    );
    for (const item of dropDowns) {
      const onClick = () => {
        item.classList.toggle("cs-active");
      };
      item.addEventListener("click", onClick);
    }
  </script>
</header>
